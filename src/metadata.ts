/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/user/dto/user.dto"]: await import("./modules/user/dto/user.dto"),
        ["./modules/email/dto/email.dto"]: await import("./modules/email/dto/email.dto"),
        ["./modules/auth/dto/auth.dto"]: await import("./modules/auth/dto/auth.dto"),
        ["./modules/count/dto/count.dto"]: await import("./modules/count/dto/count.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/user/dto/user.dto"), { "UserDto": { id: { required: true, type: () => String }, fullName: { required: true, type: () => String }, email: { required: true, type: () => String }, generation: { required: true, type: () => Number }, phoneNumber: { required: true, type: () => String }, isCheckin: { required: false, type: () => Boolean }, password: { required: false, type: () => String }, facebook: { required: true, type: () => String } }, "InfoUserDto": { fullName: { required: true, type: () => String, maxLength: 30 }, generation: { required: true, type: () => Number }, phoneNumber: { required: true, type: () => String }, email: { required: true, type: () => String, format: "email" }, facebook: { required: true, type: () => String }, image: { required: false, type: () => String } }, "FindOnePayload": { id: { required: true, type: () => String }, role: { required: true, type: () => String }, fullName: { required: true, type: () => String }, email: { required: true, type: () => String }, phoneNumber: { required: true, type: () => String }, password: { required: true, type: () => String }, generation: { required: true, type: () => Number }, isCheckin: { required: true, type: () => Boolean }, facebook: { required: true, type: () => String }, image: { required: true, type: () => String } }, "CreateUserDto": { password: { required: true, type: () => String } }, "GenerateLinkResponseDto": { token: { required: true, type: () => String } }, "RenewQrCodeResponseDto": { id: { required: true, type: () => String } }, "CheckLinkResponseDto": { fullName: { required: true, type: () => String } }, "GetAllUsers": { id: { required: true, type: () => String }, fullName: { required: true, type: () => String }, email: { required: true, type: () => String }, phoneNumber: { required: true, type: () => String }, generation: { required: true, type: () => Number }, role: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, isCheckin: { required: true, type: () => Boolean }, facebook: { required: true, type: () => String }, image: { required: true, type: () => String }, isAccessImage: { required: true, type: () => Boolean } }, "findAllUsersResponse": { users: { required: true, type: () => [t["./modules/user/dto/user.dto"].GetAllUsers] }, count: { required: true, type: () => Number }, limit: { required: true, type: () => Number }, page: { required: true, type: () => Number } }, "CheckinUserResponse": { fullName: { required: true, type: () => String }, generation: { required: true, type: () => Number } }, "UpdateUserDto": { fullName: { required: true, type: () => String, maxLength: 30 }, generation: { required: true, type: () => Number }, phoneNumber: { required: true, type: () => String }, email: { required: true, type: () => String, format: "email" }, facebook: { required: true, type: () => String }, role: { required: true, type: () => Object }, isCheckin: { required: true, type: () => Boolean }, image: { required: false, type: () => String } }, "UpdateUserResponse": { fullName: { required: true, type: () => String }, generation: { required: true, type: () => Number }, phoneNumber: { required: true, type: () => String }, email: { required: true, type: () => String }, role: { required: true, type: () => Object }, isCheckin: { required: true, type: () => Boolean }, facebook: { required: true, type: () => String }, image: { required: true, type: () => String } } }], [import("./modules/user/dto/query.dto"), { "QueryUserDto": { limit: { required: false, type: () => Number, minimum: 1 }, page: { required: false, type: () => Number, minimum: 0 }, q: { required: false, type: () => String }, sort: { required: false, type: () => String }, isCheckin: { required: false, type: () => Boolean } } }], [import("./modules/email/dto/email.dto"), { "EmailJobDto": { email: { required: true, type: () => String }, userId: { required: false, type: () => String }, fullName: { required: true, type: () => String }, phoneNumber: { required: false, type: () => String } }, "UserEmailDto": { email: { required: true, type: () => String } }, "GetAllJobs": { id: { required: true, type: () => String }, status: { required: true, type: () => Object }, reason: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, user: { required: true, type: () => t["./modules/email/dto/email.dto"].UserEmailDto } }, "GetAllJobsResponse": { emails: { required: true, type: () => [t["./modules/email/dto/email.dto"].GetAllJobs] }, count: { required: true, type: () => Number }, limit: { required: true, type: () => Number }, page: { required: true, type: () => Number } } }], [import("./modules/email/dto/query.dto"), { "QueryJobDto": { limit: { required: false, type: () => Number, minimum: 1 }, page: { required: false, type: () => Number, minimum: 0 }, q: { required: false, type: () => String }, sort: { required: false, type: () => String }, status: { required: false, type: () => Object } } }], [import("./modules/auth/dto/auth.dto"), { "LoginDto": { account: { required: true, type: () => String }, password: { required: true, type: () => String } }, "TokenPayloadDto": { accessToken: { required: true, type: () => String } }, "LoginPayloadDto": { user: { required: true, type: () => t["./modules/user/dto/user.dto"].FindOnePayload }, token: { required: true, type: () => t["./modules/auth/dto/auth.dto"].TokenPayloadDto } } }], [import("./modules/count/dto/count.dto"), { "DisplayResponseDto": { accessHomePage: { required: true, type: () => Number }, accessSignUpPage: { required: true, type: () => Number } } }]], "controllers": [[import("./modules/user/user.controller"), { "UserController": { "findAll": { type: t["./modules/user/dto/user.dto"].findAllUsersResponse }, "checkInByEmailPhone": { type: t["./modules/user/dto/user.dto"].CheckinUserResponse }, "checkIn": { type: t["./modules/user/dto/user.dto"].CheckinUserResponse }, "signup": { type: t["./modules/user/dto/user.dto"].UserDto }, "create": { type: t["./modules/user/dto/user.dto"].UserDto }, "signupAdmin": { type: t["./modules/user/dto/user.dto"].UserDto }, "streamCheckinData": {}, "exportUsers": {}, "getAllEmailJobs": { type: t["./modules/email/dto/email.dto"].GetAllJobsResponse }, "generateLink": { type: t["./modules/user/dto/user.dto"].GenerateLinkResponseDto }, "renewQR": { type: t["./modules/user/dto/user.dto"].RenewQrCodeResponseDto }, "checkLink": { type: t["./modules/user/dto/user.dto"].CheckLinkResponseDto }, "updateImage": {}, "browseImage": {}, "updateUser": { type: t["./modules/user/dto/user.dto"].UpdateUserResponse }, "checkinByFace": { type: t["./modules/user/dto/user.dto"].CheckinUserResponse }, "getOne": { type: t["./modules/user/dto/user.dto"].FindOnePayload }, "deleteOne": {} } }], [import("./modules/auth/auth.controller"), { "AuthController": { "login": { type: t["./modules/auth/dto/auth.dto"].LoginPayloadDto } } }], [import("./modules/count/count.controller"), { "CountController": { "incrementAccessHomePage": {}, "incrementAccessSignUpPage": {}, "display": { type: t["./modules/count/dto/count.dto"].DisplayResponseDto } } }]] } };
};